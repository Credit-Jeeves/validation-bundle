<?php

namespace CreditJeeves\DataBundle\Entity;

use CreditJeeves\DataBundle\Enum\OrderStatus;
use Doctrine\ORM\EntityRepository;
use RentJeeves\DataBundle\Entity\Contract;
use RentJeeves\DataBundle\Entity\Tenant;
use \DateTime;

/**
 * OperationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OperationRepository extends EntityRepository
{
    public function getOperationForImport(
        Tenant $tenant,
        Contract $contract,
        DateTime $paidFor,
        $amount
    ) {
        $query = $this->createQueryBuilder("operation");
        $query->innerJoin("operation.order", "ord");
        $query->innerJoin("operation.contract", "contract");
        $query->innerJoin("contract.tenant", "tenant");
        $query->where("tenant.id = :tenant");
        $query->andWhere("ord.status = :status");
        $query->andWhere("operation.amount = :amount");
        $query->andWhere("contract.id = :contract");
        $query->andWhere("MONTH(operation.paidFor) = :paidForMonth");
        $query->andWhere("YEAR(operation.paidFor) = :paidForYear");

        $query->setParameter("amount", $amount);
        $query->setParameter("contract", $contract->getId());
        $query->setParameter("paidForMonth", $paidFor->format("n"));
        $query->setParameter("paidForYear", $paidFor->format("Y"));
        $query->setParameter("tenant", $tenant->getId());
        $query->setParameter("status", OrderStatus::COMPLETE);

        $query->setMaxResults(1);
        $query = $query->getQuery();

        return $query->getOneOrNullResult();
    }
}
