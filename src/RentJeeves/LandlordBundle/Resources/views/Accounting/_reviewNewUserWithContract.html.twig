{% form_theme form "LandlordBundle::form_import.html.twig" %}

<tr data-bind="
         attr: {
            'class': $root.getClassLine($data)
         },
         if: !is_skipped && ((!contract.id && !tenant.id) || (is_have_email_on_db == false && tenant.id)) && contract.status != 'finished' && $root.isValidFieldsWhichNotContainsInForm($data)"
    >
    {{ form_start(form) }}
    <td data-bind="text: $root.getStatusText($data), attr: {'class': $root.getStatusText($data)+' import_status_text'}"></td>
    {% if isMultipleProperty == 'true' %}
            <td data-bind="if: contract.property !== null, visible: (contract.property !== null)">
                <span data-bind="text: contract.property.full_address">
                </span>
            </td>
            <td  class="errorField" data-bind="if: contract.property === null, visible: (contract.property === null)">
                <span  data-bind="html: address, attr: {title: '{{ 'property.cannot.map'|trans }}'}"></span>
            </td>
        </td>
    {% endif %}
    <td data-bind="
        attr:
        {
            'class': $root.getErrorClass($data, 'import_new_user_with_contract_contract_unit_name'),
            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_contract_unit_name')
        }
    ">
        {{
            form_widget(
                form.contract.unit.name,
                {"attr":
                    {
                    "data-bind": "html: $root.getUnitName($data)"
                    }
                }
            )
        }}
        {% if isMultipleProperty == "true" %}
            {{
                form_widget(
                    form.contract.isSingle,
                    {"attr":
                        {
                            "class": "isSingle",
                            "data-bind":"checked: contract.property.is_single, visible: contract.property.is_single"
                        }
                    }
                )
            }}
            <label data-bind="visible: contract.property.is_single" class="single-property-chkbox">{{ 'import.property.single.checkbox_label'|trans }}</label>
        {% endif %}
    </td>
    <td data-bind="
        attr:
        {
            'class': $root.getErrorClass($data, 'import_new_user_with_contract_contract_residentMapping_residentId'),
            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_contract_residentMapping_residentId')
        }
    ">
        {% if isSupportResidentId %}
            {{
                form_widget(
                    form.contract.residentMapping.residentId,
                    {"attr":
                        {
                        "data-bind":
                        "html:$root.getResidentId($data)"
                        }
                    }
                )
            }}
        {% endif %}
        {% if isSupportResidentId and isMultipleProperty == 'true' %}
            <hr />
        {% endif %}
        {% if isMultipleProperty == 'true' %}
            {{
                form_widget(
                    form.contract.unitMapping.externalUnitId,
                    {"attr":
                        {
                            "data-bind":
                            "html: unit_mapping.external_unit_id"
                        }
                    }
                )
            }}
        {% endif %}
    </td>
    <td>
        {{  form_widget(
                form.tenant.first_name,
                {"attr":
                    {
                        "data-bind":
                            "value: tenant.first_name,
                             attr:
                                {
                                    'class': number+'_first_name import_new_user_with_contract_tenant_first_name '+$root.getErrorClass($data, 'import_new_user_with_contract_tenant_first_name'),
                                    'title': $root.getErrorTitle($data, 'import_new_user_with_contract_tenant_first_name')
                                }"
                    }
                }
            )
        }}
    </td>
    <td>
        {{ form_widget(
            form.tenant.last_name,
            {"attr":
                {
                    "data-bind":
                        "value: tenant.last_name,
                         attr:
                            {
                                'class': number+'_last_name import_new_user_with_contract_tenant_last_name '+$root.getErrorClass($data, 'import_new_user_with_contract_tenant_last_name'),
                                'title': $root.getErrorTitle($data, 'import_new_user_with_contract_tenant_last_name')
                            }"
                }
            }
        ) }}
    </td>
    <td>
        {{ form_widget(
            form.tenant.email,
            {"attr":
                {
                    "data-bind":
                        "value: (tenant.email == null) ? email : tenant.email,
                         attr: {
                            'class': number+'_email import_new_user_with_contract_tenant_email '+$root.getErrorClass($data, 'import_new_user_with_contract_tenant_email'),
                            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_tenant_email')
                         }"
                }
            })
        }}
    </td>
    <td>
        <!-- ko if: !is_need_update_rent -->
        <div class="rentNotEditable" data-bind="text: contract.rent">
        </div>
        <!-- /ko -->
        <!-- ko if: is_need_update_rent -->
        {{ form_widget(
            form.contract.rent,
            {"attr":
                {
                    "data-bind":
                        "value: contract.rent,
                         attr: {
                            'class': number+'_rent import_new_user_with_contract_contract_rent '+$root.getErrorClass($data, 'import_new_user_with_contract_contract_rent'),
                            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_contract_rent')
                         }"
                }
            }
        )}}
        <!-- /ko -->
        {{ form_widget(
            form.contract.integratedBalance,
            {"attr":
                {
                    "data-bind":
                        "value: contract.integrated_balance,
                         attr: {
                            'class': number+'_balance import_new_user_with_contract_contract_integratedBalance '+$root.getErrorClass($data, 'import_new_user_with_contract_contract_integratedBalance'),
                            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_contract_integratedBalance')
                         }"
                }
            }
        ) }}
    </td>
    <td>
        {{ form_widget(
            form.contract.startAt,
            {
                "attr":{
                    "data-bind":
                        "value: $root.formatDate(contract.startAt),
                         datepickerOld: $root.formatDate(contract.startAt),
                         datepickerOptions: $root.getDatePickerOptions(),
                         datepickerFieldName: 'startAt',
                         attr:{
                            'class': number+'_startAt import_new_user_with_contract_tenant_startAt datepicker '+$root.getErrorClass($data,'import_new_user_with_contract_contract_startAt'),
                            'title': $root.getErrorTitle($data,'import_new_user_with_contract_contract_startAt')
                         }"
                }
            }
        ) }}
        {{ form_widget(
            form.contract.finishAt,
            {
                "attr": {
                    "data-bind":
                        "value: $root.formatDate(contract.finishAt),
                         datepickerOld: $root.formatDate(contract.finishAt),
                         datepickerOptions: $root.getDatePickerOptions(),
                         datepickerFieldName: 'finishAt',
                         attr: {
                            'class': number+'_finishAt import_new_user_with_contract_contract_finishAt datepicker '+$root.getErrorClass($data, 'import_new_user_with_contract_contract_finishAt'),
                            'title': $root.getErrorTitle($data, 'import_new_user_with_contract_contract_finishAt')
                         }"
                }
            }
        ) }}
    </td>
    <td>
        {{ form_widget(
            form.sendInvite,
            {
                "attr": {
                    "data-bind": "
                        checked: $root.isCheckedInvite(email),
                        attr: {
                            'class': number+'_sendInvite import_new_user_with_sendInvite '+$root.getErrorClass($data, 'import_new_user_with_sendInvite'),
                            'title': $root.getErrorTitle($data, 'import_new_user_with_sendInvite')
                        }"}
            }
        )}} {{ 'send.invite'|trans }}
        <br />
        {{ form_widget(
            form.contract.skip,
            {
                "attr": {
                     "class": "skipCheckbox",
                }
            }
        )}} {{ 'skip'|trans }}
    </td>
    {{ form_widget(
        form._token,
        {
            "attr": {"data-bind": "value: csrf_token, attr: {'class': number+'_token import_new_user_with_contract_tenant__token'}"}
        }) }}
    {{ form_end(form) }}
</tr>
